async function onFormLoad(executionContext) {
    const formContext = executionContext.getFormContext();
    debugger;
    // Only execute on Update (form type = 2)
    if (formContext.ui.getFormType() !== 2) {
        console.log("Form is not in update mode. Skipping flow call.");
        return;
    }
    const flowUrl = "https://prod-03.centralindia.logic.azure.com:443/workflows/a5cfa494f36d49bc9a0593351b843a4c/triggers/manual/paths/invoke?api-version=2016-06-01"; // replace with your actual Flow URL
    const clientId = "2c34728a-634b-414c-b7e4-e904ead4b2c1";
    const tenantId = "807cb068-493f-40b4-b067-712d94fa7730";
    const tokenResponse = null;

    const msalConfig = {
        auth: {
            clientId: clientId,
            authority: `https://login.microsoftonline.com/${tenantId}`,
            redirectUri: "https://demo001.crm8.dynamics.com/"
        },
        cache: {
            cacheLocation: "sessionStorage", // Required in Dynamics context
            storeAuthStateInCookie: true
        }
    };

    const msalInstance = new msal.PublicClientApplication(msalConfig);
    await msalInstance.handleRedirectPromise();
    const accounts = msalInstance.getAllAccounts();

    try {
        let account;

        // If already signed in, use the account
        if (accounts.length > 0) {
            account = accounts[0];
        } else if (!msalInstance.getActiveAccount()) 
            {
            // Check if login is already happening
            if (!msalInstance.getInteractionStatus || msalInstance.getInteractionStatus() === "none") {
                const loginResponse = await msalInstance.loginPopup({
                    //scopes: ["https://graph.microsoft.com/.default"]
                    scopes: ["https://service.flow.microsoft.com//.default"]
                });
                account = loginResponse.account;
            } else {
                console.warn("MSAL interaction already in progress. Aborting.");
                return;
            }
        }

        msalInstance.setActiveAccount(account);

        try {
            tokenResponse = await msalInstance.acquireTokenSilent({
                scopes: ["https://service.flow.microsoft.com//.default"],
                account: account
            });

            console.log("Access Token:", tokenResponse.accessToken);
        } 
        catch (error) 
        {
            if (error instanceof msal.InteractionRequiredAuthError) {
                // If silent fails, fall back to interactive
                try {
                    const tokenResponse = await msalInstance.acquireTokenPopup({
                        scopes: ["https://service.flow.microsoft.com//.default"],
                        account: account
                    });
                    console.log("Access Token:", tokenResponse.accessToken);
                } catch (popupError) {
                    console.error("Token acquisition failed via popup:", popupError);
                }
            } else {
                console.error("Silent token acquisition failed:", error);
            }
        }
        const postData = {
           requestname: "Vikash",
			requestemail: "vikash@gmail.com"
        };
        console.log("Access Token:",tokenResponse.accessToken);
        const response = await fetch(flowUrl, {
            method: "POST",
            headers: {
                "Authorization": `Bearer ${tokenResponse.accessToken}`,
                "Content-Type": "application/json"
            },
            body: JSON.stringify(postData)
        });
        
        if (!response.ok) throw new Error(`Flow call failed: ${response.statusText}`);

        const result = await response.json();
        console.log("Power Automate Flow Response:", result);

    } catch (error) {
        console.error("Failed to call Power Automate flow:", error);
    }
}